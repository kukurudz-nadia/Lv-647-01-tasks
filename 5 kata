# https://www.codewars.com/kata/515bb423de843ea99400000a

class PaginationHelper

  # The constructor takes in an array of items and a integer indicating how many
  # items fit within a single page
  def initialize(collection, items_per_page)
    @collection = collection
    @items_per_page = items_per_page
  end
  
  # returns the number of items within the entire collection
  def item_count
    @collection.size
  end
	
  # returns the number of pages
 def page_count
    count = 0
    size =  item_count()
    while (size) > 0 do
      count += 1
      size -= @items_per_page
    end
    count
 end
	
  # returns the number of items on the current page. page_index is zero based.
  # this method should return -1 for page_index values that are out of range
  def page_item_count(page_index)
       arr = []
    size = @collection.size
    count = 0
    while (size) > 0 do
      arr << count
      count += 1
      size -= @items_per_page
    end
    if page_index >= 0 and page_index < arr[-1]
      return @items_per_page
    elsif page_index == arr[-1]
      s = @collection.size
      return s = s - @items_per_page * (count - 1)
    else
      return -1
    end
  end
	
  # determines what page an item is on. Zero based indexes.
  # this method should return -1 for item_index values that are out of range
  def page_index(item_index) 
   size = @collection.size
   if item_index < 0 || item_index >= size
     return -1
   else
     item_index / @items_per_page
   end
  end
end
